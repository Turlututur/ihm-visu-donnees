import { WithWhere } from "../clauses/mixins/WithWhere";
import type { CypherEnvironment } from "../Environment";
import type { Expr } from "../types";
import type { Variable } from "../variables/Variable";
import { ComprehensionExpr } from "./ComprehensionExpr";
export declare class ListComprehension extends ComprehensionExpr {
    private variable;
    private listExpr;
    private mapExpr;
    constructor(variable: Variable, listExpr?: Expr);
    in(listExpr: Expr): this;
    map(mapExpr: Expr): this;
    getCypher(env: CypherEnvironment): string;
}
export interface ListComprehension extends WithWhere {
}
//# sourceMappingURL=ListComprehension.d.ts.map