import { WithWhere } from "../clauses/mixins/WithWhere";
import type { CypherEnvironment } from "../Environment";
import { MatchableElement, Pattern } from "../Pattern";
import type { Expr } from "../types";
import { ComprehensionExpr } from "./ComprehensionExpr";
export declare class PatternComprehension extends ComprehensionExpr {
    private pattern;
    private mapExpr;
    constructor(pattern: Pattern | MatchableElement, mapExpr?: Expr);
    getCypher(env: CypherEnvironment): string;
}
export interface PatternComprehension extends WithWhere {
}
//# sourceMappingURL=PatternComprehension.d.ts.map