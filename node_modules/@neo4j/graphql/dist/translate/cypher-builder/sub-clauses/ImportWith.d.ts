import type { Call } from "../clauses/Call";
import type { CypherEnvironment } from "../Environment";
import type { PropertyRef } from "../PropertyRef";
import type { Param } from "../variables/Param";
import type { Variable } from "../variables/Variable";
import { SubClause } from "./SubClause";
export declare type SetParam = [PropertyRef, Param<any>];
/** Represents a WITH statement to import variables into a CALL subquery */
export declare class ImportWith extends SubClause {
    private params;
    constructor(parent: Call, params?: Variable[]);
    getCypher(env: CypherEnvironment): string;
}
//# sourceMappingURL=ImportWith.d.ts.map