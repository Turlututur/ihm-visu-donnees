import type { CypherASTNode } from "../CypherASTNode";
import type { CypherEnvironment } from "../Environment";
import type { PropertyRef } from "../PropertyRef";
import type { Expr } from "../types";
import { SubClause } from "./SubClause";
export declare type SetParam = [PropertyRef, Expr];
export declare class SetClause extends SubClause {
    protected params: SetParam[];
    constructor(parent: CypherASTNode, params?: SetParam[]);
    addParams(...params: SetParam[]): void;
    getCypher(env: CypherEnvironment): string;
    private composeParam;
}
//# sourceMappingURL=Set.d.ts.map