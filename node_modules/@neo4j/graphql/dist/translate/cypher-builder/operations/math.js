"use strict";
/*
 * Copyright (c) "Neo4j"
 * Neo4j Sweden AB [http://neo4j.com]
 *
 * This file is part of Neo4j.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.minus = exports.plus = exports.MathOp = void 0;
const Operation_1 = require("./Operation");
class MathOp extends Operation_1.Operation {
    constructor(operator, left, right) {
        super();
        this.operator = operator;
        this.leftExpr = left;
        this.rightExpr = right;
    }
    getCypher(env) {
        const leftStr = this.leftExpr ? `${this.leftExpr.getCypher(env)} ` : "";
        const rightStr = this.rightExpr ? ` ${this.rightExpr.getCypher(env)}` : "";
        return `${leftStr}${this.operator}${rightStr}`;
    }
}
exports.MathOp = MathOp;
function createOp(op, leftExpr, rightExpr) {
    return new MathOp(op, leftExpr, rightExpr);
}
function plus(leftExpr, rightExpr) {
    return createOp("+", leftExpr, rightExpr);
}
exports.plus = plus;
function minus(leftExpr, rightExpr) {
    return createOp("-", leftExpr, rightExpr);
}
exports.minus = minus;
//# sourceMappingURL=math.js.map