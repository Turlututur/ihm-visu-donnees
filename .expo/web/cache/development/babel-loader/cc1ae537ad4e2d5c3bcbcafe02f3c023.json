{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Navigation from \"./Navigation/Navigation\";\nimport { TokenContext, UsernameContext } from \"./Context/Context\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      token = _useState2[0],\n      setToken = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  console.log('token', token);\n  return _jsx(UsernameContext.Provider, {\n    value: [username, setUsername],\n    children: _jsx(TokenContext.Provider, {\n      value: [token, setToken],\n      children: _jsx(Navigation, {})\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","Navigation","TokenContext","UsernameContext","App","token","setToken","username","setUsername","console","log","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["/home/tutur/Documents/Travail/Master/M2/S1/IHM - Visualisation de Donnees/project/App.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Button, StyleSheet, Text, View } from 'react-native'\n\nimport Navigation from './Navigation/Navigation'\n\nimport { TokenContext, UsernameContext } from './Context/Context'\n\nexport default function App () {\n  const [token, setToken] = useState(null)\n  const [username, setUsername] = useState(null)\n\n  console.log('token', token)\n  return (\n    <UsernameContext.Provider value={[username, setUsername]}>\n      <TokenContext.Provider value={[token, setToken]}>\n        <Navigation />\n      </TokenContext.Provider>\n    </UsernameContext.Provider>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n})\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAGA,OAAOC,UAAP;AAEA,SAASC,YAAT,EAAuBC,eAAvB;;AAEA,eAAe,SAASC,GAAT,GAAgB;EAC7B,gBAA0BJ,QAAQ,CAAC,IAAD,CAAlC;EAAA;EAAA,IAAOK,KAAP;EAAA,IAAcC,QAAd;;EACA,iBAAgCN,QAAQ,CAAC,IAAD,CAAxC;EAAA;EAAA,IAAOO,QAAP;EAAA,IAAiBC,WAAjB;;EAEAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBL,KAArB;EACA,OACE,KAAC,eAAD,CAAiB,QAAjB;IAA0B,KAAK,EAAE,CAACE,QAAD,EAAWC,WAAX,CAAjC;IAAA,UACE,KAAC,YAAD,CAAc,QAAd;MAAuB,KAAK,EAAE,CAACH,KAAD,EAAQC,QAAR,CAA9B;MAAA,UACE,KAAC,UAAD;IADF;EADF,EADF;AAOD;AAED,IAAMK,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}